from ..util import lazyproperty as lazyproperty

class FontFiles:
    @classmethod
    def find(cls, family_name, is_bold, is_italic): ...

class _Font:
    def __init__(self, stream) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exception_type: type[BaseException] | None, exception_value: BaseException | None, exception_tb: types.TracebackType | None) -> None: ...
    @property
    def is_bold(self): ...
    @property
    def is_italic(self): ...
    @classmethod
    def open(cls, font_file_path): ...
    @property
    def family_name(self): ...

class _Stream:
    def __init__(self, file) -> None: ...
    @classmethod
    def open(cls, path): ...
    def close(self) -> None: ...
    def read(self, offset, length): ...
    def read_fields(self, template, offset: int = 0): ...

class _BaseTable:
    def __init__(self, tag, stream, offset, length) -> None: ...

class _HeadTable(_BaseTable):
    def __init__(self, tag, stream, offset, length) -> None: ...
    @property
    def is_bold(self): ...
    @property
    def is_italic(self): ...

class _NameTable(_BaseTable):
    def __init__(self, tag, stream, offset, length) -> None: ...
    @property
    def family_name(self): ...
