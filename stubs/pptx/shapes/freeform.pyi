from pptx.compat import Sequence as Sequence
from pptx.util import lazyproperty as lazyproperty

class FreeformBuilder(Sequence):
    def __init__(self, shapes, start_x, start_y, x_scale, y_scale) -> None: ...
    def __getitem__(self, idx): ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    @classmethod
    def new(cls, shapes, start_x, start_y, x_scale, y_scale): ...
    def add_line_segments(self, vertices, close: bool = True): ...
    def convert_to_shape(self, origin_x: int = 0, origin_y: int = 0): ...
    def move_to(self, x, y): ...
    @property
    def shape_offset_x(self): ...
    @property
    def shape_offset_y(self): ...

class _BaseDrawingOperation:
    def __init__(self, freeform_builder, x, y) -> None: ...
    def apply_operation_to(self, path) -> None: ...
    @property
    def x(self): ...
    @property
    def y(self): ...

class _Close:
    @classmethod
    def new(cls): ...
    def apply_operation_to(self, path): ...

class _LineSegment(_BaseDrawingOperation):
    @classmethod
    def new(cls, freeform_builder, x, y): ...
    def apply_operation_to(self, path): ...

class _MoveTo(_BaseDrawingOperation):
    @classmethod
    def new(cls, freeform_builder, x, y): ...
    def apply_operation_to(self, path): ...
