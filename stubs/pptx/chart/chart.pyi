from pptx.chart.axis import CategoryAxis as CategoryAxis, DateAxis as DateAxis, ValueAxis as ValueAxis
from pptx.chart.legend import Legend as Legend
from pptx.chart.plot import PlotFactory as PlotFactory, PlotTypeInspector as PlotTypeInspector
from pptx.chart.series import SeriesCollection as SeriesCollection
from pptx.chart.xmlwriter import SeriesXmlRewriterFactory as SeriesXmlRewriterFactory
from pptx.compat import Sequence as Sequence
from pptx.dml.chtfmt import ChartFormat as ChartFormat
from pptx.shared import ElementProxy as ElementProxy, PartElementProxy as PartElementProxy
from pptx.text.text import Font as Font, TextFrame as TextFrame
from pptx.util import lazyproperty as lazyproperty

class Chart(PartElementProxy):
    def __init__(self, chartSpace, chart_part) -> None: ...
    @property
    def category_axis(self): ...
    @property
    def chart_style(self): ...
    @chart_style.setter
    def chart_style(self, value) -> None: ...
    @property
    def chart_title(self): ...
    @property
    def chart_type(self): ...
    def font(self): ...
    @property
    def has_legend(self): ...
    @has_legend.setter
    def has_legend(self, value) -> None: ...
    @property
    def has_title(self): ...
    @has_title.setter
    def has_title(self, value) -> None: ...
    @property
    def legend(self): ...
    def plots(self): ...
    def replace_data(self, chart_data) -> None: ...
    def series(self): ...
    @property
    def value_axis(self): ...

class ChartTitle(ElementProxy):
    def __init__(self, title) -> None: ...
    def format(self): ...
    @property
    def has_text_frame(self): ...
    @has_text_frame.setter
    def has_text_frame(self, value) -> None: ...
    @property
    def text_frame(self): ...

class _Plots(Sequence):
    def __init__(self, plotArea, chart) -> None: ...
    def __getitem__(self, index): ...
    def __len__(self) -> int: ...
