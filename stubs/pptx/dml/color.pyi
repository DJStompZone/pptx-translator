from ..enum.dml import MSO_COLOR_TYPE as MSO_COLOR_TYPE, MSO_THEME_COLOR as MSO_THEME_COLOR
from ..oxml.dml.color import CT_HslColor as CT_HslColor, CT_PresetColor as CT_PresetColor, CT_SRgbColor as CT_SRgbColor, CT_ScRgbColor as CT_ScRgbColor, CT_SchemeColor as CT_SchemeColor, CT_SystemColor as CT_SystemColor

class ColorFormat:
    def __init__(self, eg_colorChoice_parent, color) -> None: ...
    @property
    def brightness(self): ...
    @brightness.setter
    def brightness(self, value) -> None: ...
    @classmethod
    def from_colorchoice_parent(cls, eg_colorChoice_parent): ...
    @property
    def rgb(self): ...
    @rgb.setter
    def rgb(self, rgb) -> None: ...
    @property
    def theme_color(self): ...
    @theme_color.setter
    def theme_color(self, mso_theme_color_idx) -> None: ...
    @property
    def type(self): ...

class _Color:
    def __new__(cls, xClr): ...
    def __init__(self, xClr) -> None: ...
    @property
    def brightness(self): ...
    @brightness.setter
    def brightness(self, value) -> None: ...
    @property
    def color_type(self) -> None: ...
    @property
    def rgb(self) -> None: ...
    @property
    def theme_color(self): ...

class _HslColor(_Color):
    @property
    def color_type(self): ...

class _NoneColor(_Color):
    @property
    def color_type(self) -> None: ...
    @property
    def theme_color(self) -> None: ...

class _PrstColor(_Color):
    @property
    def color_type(self): ...

class _SchemeColor(_Color):
    def __init__(self, schemeClr) -> None: ...
    @property
    def color_type(self): ...
    @property
    def theme_color(self): ...
    @theme_color.setter
    def theme_color(self, mso_theme_color_idx) -> None: ...

class _ScRgbColor(_Color):
    @property
    def color_type(self): ...

class _SRgbColor(_Color):
    def __init__(self, srgbClr) -> None: ...
    @property
    def color_type(self): ...
    @property
    def rgb(self): ...
    @rgb.setter
    def rgb(self, rgb) -> None: ...

class _SysColor(_Color):
    @property
    def color_type(self): ...

class RGBColor(tuple):
    def __new__(cls, r, g, b): ...
    @classmethod
    def from_string(cls, rgb_hex_str): ...
