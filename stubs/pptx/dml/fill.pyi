from pptx.compat import Sequence as Sequence
from pptx.dml.color import ColorFormat as ColorFormat
from pptx.enum.dml import MSO_FILL as MSO_FILL
from pptx.oxml.dml.fill import CT_BlipFillProperties as CT_BlipFillProperties, CT_GradientFillProperties as CT_GradientFillProperties, CT_GroupFillProperties as CT_GroupFillProperties, CT_NoFillProperties as CT_NoFillProperties, CT_PatternFillProperties as CT_PatternFillProperties, CT_SolidColorFillProperties as CT_SolidColorFillProperties
from pptx.shared import ElementProxy as ElementProxy
from pptx.util import lazyproperty as lazyproperty

class FillFormat:
    def __init__(self, eg_fill_properties_parent, fill_obj) -> None: ...
    @classmethod
    def from_fill_parent(cls, eg_fillProperties_parent): ...
    @property
    def back_color(self): ...
    def background(self) -> None: ...
    @property
    def fore_color(self): ...
    def gradient(self) -> None: ...
    @property
    def gradient_angle(self): ...
    @gradient_angle.setter
    def gradient_angle(self, value) -> None: ...
    @property
    def gradient_stops(self): ...
    @property
    def pattern(self): ...
    @pattern.setter
    def pattern(self, pattern_type) -> None: ...
    def patterned(self) -> None: ...
    def solid(self) -> None: ...
    @property
    def type(self): ...

class _Fill:
    def __new__(cls, xFill): ...
    @property
    def back_color(self) -> None: ...
    @property
    def fore_color(self) -> None: ...
    @property
    def pattern(self) -> None: ...
    @property
    def type(self) -> None: ...

class _BlipFill(_Fill):
    @property
    def type(self): ...

class _GradFill(_Fill):
    def __init__(self, gradFill) -> None: ...
    @property
    def gradient_angle(self): ...
    @gradient_angle.setter
    def gradient_angle(self, value) -> None: ...
    def gradient_stops(self): ...
    @property
    def type(self): ...

class _GrpFill(_Fill):
    @property
    def type(self): ...

class _NoFill(_Fill):
    @property
    def type(self): ...

class _NoneFill(_Fill):
    @property
    def type(self) -> None: ...

class _PattFill(_Fill):
    def __init__(self, pattFill) -> None: ...
    def back_color(self): ...
    def fore_color(self): ...
    @property
    def pattern(self): ...
    @pattern.setter
    def pattern(self, pattern_type) -> None: ...
    @property
    def type(self): ...

class _SolidFill(_Fill):
    def __init__(self, solidFill) -> None: ...
    def fore_color(self): ...
    @property
    def type(self): ...

class _GradientStops(Sequence):
    def __init__(self, gsLst) -> None: ...
    def __getitem__(self, idx): ...
    def __len__(self) -> int: ...

class _GradientStop(ElementProxy):
    def __init__(self, gs) -> None: ...
    def color(self): ...
    @property
    def position(self): ...
    @position.setter
    def position(self, value) -> None: ...
