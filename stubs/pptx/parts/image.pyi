from _typeshed import Incomplete
from pptx.compat import BytesIO as BytesIO, is_string as is_string
from pptx.opc.package import Part as Part
from pptx.opc.spec import image_content_types as image_content_types
from pptx.util import lazyproperty as lazyproperty

class ImagePart(Part):
    def __init__(self, partname, content_type, package, blob, filename: Incomplete | None = None) -> None: ...
    @classmethod
    def new(cls, package, image): ...
    @property
    def desc(self): ...
    @property
    def ext(self): ...
    @property
    def image(self): ...
    def scale(self, scaled_cx, scaled_cy): ...
    def sha1(self): ...

class Image:
    def __init__(self, blob, filename) -> None: ...
    @classmethod
    def from_blob(cls, blob, filename: Incomplete | None = None): ...
    @classmethod
    def from_file(cls, image_file): ...
    @property
    def blob(self): ...
    def content_type(self): ...
    def dpi(self): ...
    def ext(self): ...
    @property
    def filename(self): ...
    def sha1(self): ...
    def size(self): ...
