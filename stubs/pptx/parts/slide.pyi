from pptx.enum.shapes import PROG_ID as PROG_ID
from pptx.opc.package import XmlPart as XmlPart
from pptx.opc.packuri import PackURI as PackURI
from pptx.oxml.slide import CT_NotesMaster as CT_NotesMaster, CT_NotesSlide as CT_NotesSlide, CT_Slide as CT_Slide
from pptx.oxml.theme import CT_OfficeStyleSheet as CT_OfficeStyleSheet
from pptx.parts.chart import ChartPart as ChartPart
from pptx.parts.embeddedpackage import EmbeddedPackagePart as EmbeddedPackagePart
from pptx.slide import NotesMaster as NotesMaster, NotesSlide as NotesSlide, Slide as Slide, SlideLayout as SlideLayout, SlideMaster as SlideMaster
from pptx.util import lazyproperty as lazyproperty

class BaseSlidePart(XmlPart):
    def get_image(self, rId): ...
    def get_or_add_image_part(self, image_file): ...
    @property
    def name(self): ...

class NotesMasterPart(BaseSlidePart):
    @classmethod
    def create_default(cls, package): ...
    def notes_master(self): ...

class NotesSlidePart(BaseSlidePart):
    @classmethod
    def new(cls, package, slide_part): ...
    def notes_master(self): ...
    def notes_slide(self): ...

class SlidePart(BaseSlidePart):
    @classmethod
    def new(cls, partname, package, slide_layout_part): ...
    def add_chart_part(self, chart_type, chart_data): ...
    def add_embedded_ole_object_part(self, prog_id, ole_object_file): ...
    def get_or_add_video_media_part(self, video): ...
    @property
    def has_notes_slide(self): ...
    def notes_slide(self): ...
    def slide(self): ...
    @property
    def slide_id(self): ...
    @property
    def slide_layout(self): ...

class SlideLayoutPart(BaseSlidePart):
    def slide_layout(self): ...
    @property
    def slide_master(self): ...

class SlideMasterPart(BaseSlidePart):
    def related_slide_layout(self, rId): ...
    def slide_master(self): ...
